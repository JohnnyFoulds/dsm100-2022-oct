{
  "course": "DSM100-2022-OCT",
  "topic": "Topics 5&6: Creatures",
  "title": "Lecture: The URDF file format",
  "url": "https://learn.london.ac.uk/mod/page/view.php?id=96250&forceview=1",
  "transcript": "[music]-In this video, I'm going to be talking about the URDF file format.First of all, I'm going to ask the question,what is URDF?and then explain why we're using URDFand we're going to load a pre-made URDF modelinto pybullet and see what that looks like.We're going to talk a little bit about what's in that model,how it's defined in the file,and then finally going to load multiple models inand see how that all works.Okay, let's jump into it.First of all, what is URDF?Well, it stands for Unified Robot Description Format.It's essentially a standardized format for defining robots.It's written in XML.It's an XML-based file formatand you can specify motors and other dynamics.This is a really cool format, it's a really powerful format.It's like a 3D model format so similar to things that you might generatefrom a 3D modeling tool, like Blender or something,but it's got extra features or it's focused on the ideathat you're defining a robot.It's got things like defining motors and connectionsbetween joints and how they can be moved,and all kinds of robot specialized features,and is originally part of the robot operating system projectbut now it's actually part of multiple other projects,like pybullet, for example.There's a link there to some tutorials.I'll provide that as a reading after the videoso you can go and look at that,but that takes you through the idea of building a model from scratch,which is pretty cool.Why are we using URDF?Well, as I said, it's a standardized formatfor defining robots.In the creature simulation,we're essentially evolving robotic moving creatures.It makes sense to use a standard format to describe them because otherwise,we're going to have to be using lots of calls to this,create multi-bodyand creating all these complicated data structuresto define the models,when actually, there's a really nice, neat,very readable file format already out there.It's just basically easier to work with that file format.More importantly, as I said up there,we can more easily share these models.By sharing an XML file, someone else can load up your model.Once we get into the evolution,start evolving some interesting shapes,we can share them with each otherso that we can see everyone else is evolving in their system.It should be pretty cool.Moving on.First of all,let's see how we can go about loading a pre-made model.Before we do that,I want to just show you this pybullet data modulebecause this gives us easy access to the pre-made models.If I just go into IPython,I'm just going to show you this.If I import pybullet data as PDand I'll do \"pd.getDataPath\".That file pathis where the pybullet library stores all of its data files.By looking in that folder,if I get that file path,you can basically go into it,and then you can have a list.Let's see what's in there.If I do a list and filter for URDF files,you can see these are all the URDF files.there are also subfolders with files in as well,but nevertheless, these are the top level ones.There's loads of them that come with the library.If you're working on simulating standard robots,and you want to do some machine learning,there's lots of standard robot URDF files availableyou can work with already.We're going to be generatingour own custom URDF files using evolution,which is cool but for now,let's see if we can load all these files into Pythonand see how it works.I'm going to load in this R2D2 one.Now, what I've done is I've created a little starter file called starter.py.If I just show you what's in it before we do it,it's really just got those commands to just import the right things,and then to create a play on the floorand get things ready to go basically.That's just to save me having to type it in every time.From IPython, I can type \"run starter.py\",and it gets that all going for me.The next step is I want to try and load in one of these files.What I can do is I can do robot = p.loadURDF.I'm going to just specify the complete file path here,and I'm going to load in this R2D2 one.If I do that,that seemed to work.You can see that something's appeared here.Let's zoom in and investigate.You can see that I've got something.Again, it's that origin 000,so it's stuck in the middle of the plane,but you can see that's clearly some sort of familiar-ish looking robot.That shows you that you can very easily loada pre-made model in.Now, the next question is, let's have a little dig around in that fileand see what it's got in there.Before we do that,I want to talk a little bit about links and jointsso that when we look at the XML, we understand what we're looking at.Now, here's my drawing program.I'm going to trying and illustratethe structure of a URDF file here.You can see in that thing,it seems to have different objects in it.It's got different shapes stuck in there,various shapes and different things going on.Well, the way that this works in URDF iswe have basically things called linksand things called joints.Personally, I find it a bit confusing.It's yet another set of terminologies for graph type structures,loads, edges, whatever, but these ones are called links.I find the word 'link' a little bit confusing so just to clarify,a link is one of the parts of the robot, it's like a robot part,and the joint is a connection between two robot parts.We have links,which are basically the shapes, the robot parts,we have joints, connecting them.You can have as many as you like, you can have multiple things coming off.For me, this looks ideal for our robot.If you remember back to the video about how [?] directed graph works,it's a similar idea here.In the XML file, you're basically going to find essentially a directed graph,if you like,but it's done in a flat non-hierarchical way.What's interesting about it is you can also specify thingslike this angle here.What's the angle?What's the angle there?That's obviously in 3D,so it's specifying what angle the joint is at.It can be a fixed joint or a movable joint.You can have motors in there.There's all kinds of stuff and you obviously specify the distance,you specify what shape is it?What is it? A cone?A cylinder? Whatever.It's a really powerful description languageand it can even load in external OBJ files,which if you've created a modelinside Blender or something,you can load that in as part of your URDF file,but we're just going to be using primitivesfor our purposes.That gives you the idea.Links and joints.That robot is entirely built out of links and joints.Let's have a little peek at the XML file that representsthat robot and see what we got in there.If I do \"more r2dr\".There we go. There's the XML.You can see that we've got a link.We got the XML tag, and then we got a robot tag with a name.We've got named links, and then a bunch of links.If we keep going, eventually we find a joint.The joint is connecting that link to that link.As I was saying, it's a directed graph that's specified in a flat format.That's the basic idea.Now, before we get into designing these things by hand,which we're going to do in the next video,I wanted to show you how far you can go with this.I just want to load in another model into our environment here.Here we go. Here's our environment.Let's just go back to the code.If I do this,\"= p.loadURDF\",and it's called that one.Okay, get ready.What do we got?We now got an R2D2 robotin this authentic-looking Samurai space.It's doesn't have texture mapping and all of that on there but it's pretty detailed,the model, you can see and quite impressive looking,but he's stuck there in the middle of it wondering, \"What's going on?\"That just shows you,you can load multiple URDF files,URDF files can be really complex and it's pretty efficient.It loaded that in very quickly,and those URDF files actually reference outto other OBJ files, and so on.In summary,what we've been looking at is the URDF file format.I've been just introducing it really.I started out by answering the question,\"What is it?\" then, \"Why are we using it?\"and then we've loaded a pre-made URDF file into our pybullet environmentand display that as a 3D form.I've talked a bit about how it works,that it's a directed graph based around links and joints,and then we saw that we can actually load in multiple modelsto a single environmentand have these really elaborate models if we want to.In this video,I've just been giving you an introduction to the URDF file format."
}