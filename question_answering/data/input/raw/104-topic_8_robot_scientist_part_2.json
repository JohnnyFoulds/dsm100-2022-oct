{
  "course": "DSM100-2022-OCT",
  "topic": "Topic 8: Robot Scientist part 2",
  "title": "Lecture 3: Hypotheses generation agent",
  "url": "https://learn.london.ac.uk/mod/page/view.php?id=96398&forceview=1",
  "transcript": "-In this demo video, we will look at the reasoning agent.The reasoning agent implements abductive reasoning to generate hypothesis.This agent requires knowledge model.Every [?] toy robot scientist knows about the drug design.What it knows it's in knowledge agent it is represented and passed overthat knows there are 10 chemicals.Two of them are drugs, two of them are toxins as they havecertain properties like molecular weight.If this molecular weight is small enough, more precisely below 500 daltons,it's considered as a small molecule and then if it is a small molecule,then it's more likely to be a drug.The abduction is like some assumptions based on our knowledge.In this case, encoded in our knowledge models that if a chemical isa small molecule, then it's likely to be drug and it's worth testing.It may be true.It may be not true.It's possible to generate the same hypothesis by other means,for example, filtering database.The disadvantage is then first, the logic will be lost.The logic is abductions that explicitly dictate that conclusions are notnecessarily correct and it's very important thatif you just filter database, you may not take due care about it.Mostly important is that for complicated situations,a robot is very complicated.Many links, many connections, many inference steps.It's very difficult to do it by filtering or just machine learning some patterns.It's much easier and it more corresponds to how humans are thinking.It's just put in form of rules.What we know.If the answer that it's likely to be this is, if this, then maybe that.It can be done with probabilistic reasoning and it's fine,or it can be done with abductive reasoning.This is what our toy reasoning agent does.It needs knowledge as input and it will output hypothesis.In my file, it's option two.It is how we can initiate our knowledge agent.Before we start, I just want to show you that all files are cleared.Before anything is done here--If something is left from previous runs or whatever,so it's all files hypothesis data parts.It's all cleared and also other files that I used at some point.Everything will be generated.If I press 2, then we will initiate our reasoning agent.First of all, you see, it generated potential drugsand that is successful rules this hypothesis to [?] file.Then this file can be picked up by other agents and they can dowhatever they need to do with it.Let's look at how it's all working.It is our abduction reasoning.Let's have a look inside.This is already a familiar library [?] to work with [?] to make it easier.For abductive reasoning--It also can be used for deductive reasoning.We will use Cambrian.It is libraries that--Essentially, it imitates the working of Prolog.Let's see how it is all organized.First of all, it inputs facts and rules.It inputs from files.We didn't link it directly to knowledge model.It can be linked.It's just a matter of passing the script.We did it in an easier way.We have a list of facts where it's all listed what chemicals,what properties, and also a list of rules.We have only one rule.Is that small molecules are likely to be drugs.This [?] pass.First, we print all our facts and truths just to be sure that it can pick it up.Now it constructs the relation.What it does, it now needs to put it in a structure that Cambriancan work with and it needs triplets.It needs this relation.We defined relation is up, and it also constructs this fact.There are two lists.Fact 0 fact 1.Fact 0 is these chemicals and fact 1 it is its properties.It can be a small molecule, a large molecule, [?],it can be drug, it can be toxic.Whatever property it has.It's two lists and then it's constructed.Then it defines function likely drug and it imitates the logicof our rule that it's likely to be drug if chemical is small molecule.In this case, X will be replaced with this chemical, and Ywill be replaced with a small molecule.This is just the construction.It is not where reasoning is happening.Construction of facts is happening here.List of facts and then its list of lists.[?] is our relation and then take fact 1, take fact 0, fact 1.Chemical name and some chemical property.The reasoning happening here-- Which chemical is a drug?First, a variable is defined which chemical is a drug?Then is this [?] chemical property for the drug it has to be small molecule,and then this is how Cambrian works.This output will be these potential drugs.All chemicals that have properties, small molecule.It's inbuilt function run.Zero stands for output all possible options or it can be numbers,then number of outputs will be limited by that number.Then this variable and this what we defined previously likely drug,this variable and chemical property rule that is set to small molecule.This is how syntax of Cambrian implemented by the logic behindit is likely to be drug if chemical is a small molecule.Then it just prints it and [?] to hypothesis file,and this is what you see as an output.If you're interested in understanding better how Cambrian worksand essentially using unification the same as in prolog,I provided the link notes so you can check.Otherwise, so this demo example of how reasoning can be implementedin python to generate some guesses.Hypotheses are not necessarily true, but something would be interestingto test because of a chance of being true.We used only one rule.In real-world, it can be many rules.[?] It's probably the best approach to try to generate something new,something what was checked using these rules.The output of the knowledge reasoning agentis a set of hypotheses will be passed to as agents"
}