{
  "course": "DSM100-2022-OCT",
  "topic": "Topic 3: Knowledge, reasoning and planning",
  "title": "Lecture 3: Ontological engineering Part I",
  "url": "https://learn.london.ac.uk/mod/page/view.php?id=96167&forceview=1",
  "transcript": "[music]In this mini lecture, we will discuss how to construct good,logically consistent knowledge models.As with any area, there are good and bad practicesin designing knowledge models.The area of research that deals with engineering of knowledge modelsis called ontology engineering.Ontological research has a long history over 2,500 years.It dates back to Aristotle.Our focus on computational aspects of ontological research, not historical,even if it is really interesting.A good approach the knowledge modeling is to define first what is what.That is like putting a backbone in place before definingany other relationships.Such a solid structure when all entitiesare explicitly linked, helps with reasoning.In the previously considered example aboutmaster data science program, some of the entitieswere not well-connected, and there was no overall clear structure.We can remedy that.All things can be grouped into four categories.First, organization, education unit, and query.We can link all entities in the considered exampleby is-a relations or subtype, or subclass relations.University of London is organization.Student is a person.Now, we have a good structure in place.Moreover, the relation is- a has important propertieswhich are used by inference engines.Everything, what is true for an upper-level entity is also truefor all its subclasses.If we define that a query has such a property,that it can be raised by a student, then both subclasses, academicand non-academic queries, will inherit this property.If we define that a person has a name, then all subentities,a student, a tutor, a manager, will inherit this property.No need of defining it separately for each of subclass.A good practice is to have a tree-like is-a hierarchy of classes.This is called the single inheritance approach.It is usually easier to follow multiple inheritance modeling approachwhere a class can have multiple parents,but then it is harder for reasoners to process such models.How to define categories?This question dates back to Aristotle who proposedthe realist theory of categories all the mates.Aristotle defined such categories as substance, quality, quantity,location, and so on.This didn't change much.Knowledge engineers are still using some of the categoriesdefined by Aristotle.The selection of categories or upper level, or top-level classes,as they're called in ontology engineering, depends on the domain one has to model.There are some ready sets of categories available.They are called upper-level ontologies.They're like pamphlets which you can usefor the development of your model.What is an ontology?The most common definition in computer scienceis given by Tom Gruber in 1995.An ontology is a formal and explicit specificationof a shared conceptualization of a domain.The key features of ontologies from the computational perspective are,an unambiguous representation of a particular domain,makes implicit knowledge explicit, enables reasoning,both human-readable and machine-readable, shared by a group of stakeholders.Each feature is important, including sharing.Developing knowledge models is time consuming and requires expertise.Therefore, they must be reusable.What is an ontology engineering?It has aspects of both software engineeringand knowledge engineering.From knowledge engineering point of view, acquisition and structuringof the relevant knowledge, implementation of the structured knowledgeinto knowledge bases, testing and validation of the inserted knowledge.From software engineering point of view,identification of user requirements, versioning, testing, documenting,evaluating, and so on.Typical applications of ontologies include using an ontologyas a controlled vocabulary and as a standard.An example is gene ontology, one of the first,and probably the most famous, ontology.Gene ontology provides a computational representationof our knowledge about genes and gene products across all species.Ontologies are great for data integration,especially of heterogeneous datasets.A good example is linked open data initiative that links wellover 1,000 datasets.More and more often, ontologies are used as knowledge graphs.They define the meaning of the nodes and links,allow to derive new information, and support dynamic updates,data governance, provenance.Example is Google knowledge Graph.What is the most relevant to our topic is the use an ontologyas a knowledge base for knowledge-based agents.It can model not only the main knowledgelike in the example we considered, but also problems, goals,and the agent itself, its components, functionality and means of communication.In this mini lecture we talked about ontology engineering,my favorite topic.Well-modeled ontologies can be used as knowledge basesfor knowledge-based agents, as tools for dataand knowledge integration.Also, it's very useful for humans in various applications"
}