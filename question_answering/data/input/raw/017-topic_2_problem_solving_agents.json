{
  "course": "DSM100-2022-OCT",
  "topic": "Topic 2: Problem solving agents",
  "title": "Lecture 2: Uninformed search",
  "url": "https://learn.london.ac.uk/mod/page/view.php?id=96124&forceview=1",
  "transcript": "[MUSIC]In this mini-lecture,we will talk about several search strategiesthat are called blind or uninformed.This means that an agentdoesn't have any additional informationbeyond the problem definition itself.Such an agent decides on the next stepand then evaluates if the goal statewas achieved or not.Blind search strategies differ from each otherby the order they select the next nodes for expansion.We will consider breadth-first,uniform-cost, and depth-first searches.Breadth-first search is a strategyin which the root node is expanded first,then, all the successors of the root node are expanded,then their successors, and so on.The figure on this slide shows an example search tree.The root node A1 is first expanded to nodes A2 and B1.Then at the next step, A2 is expanded to A3,and B1 is expanded to C1.At the next step, A3 is expanded to A4 and B4and so on, level by level.Often the maximum depth of expansion is fixed.Now, we will assess the breadth-first searchby the criteria we previously introduced.Completeness,the algorithm guarantees to find the solutionif there is one at the finite depth.Optimality,generally it doesn't guarantee to find an optimal solution,but it will find the first goal state and then stop.However, for uniform-cost searchwhere the cost of each step is equal,the solution will be optimal.Time and space complexity.This type of search is not economical,it requires exponential time and space to complete the search.For example, if 1 million nodes can be generated per second,one node requires 1000 bytes of storage.The search tree with branching factor b10and the depth of solution d10will require 3 hours and 10 terabytes.If the depth is 14,then it will require three and a half yearsand 99 petabytes, and so on.It is not a very practical strategy.Depth-first search always expands the deepest node firstin the current frontier of the search tree.For example,search tree,the root node A1is first expanded to nodes A2, A3, and A4.If solution is not there, then the algorithm will backtraceto the node A3 and expand it to B4.If no solution yet,then it will go back to A2,expand to B3, C4.If still no solution, then go back to B1 and expand to C1.Let us assume that C1 is the goal statethen the breadth-first search will actually find C1 faster.As with breadth-first search,depth-first search is complete.It guarantees to find the solution if there is oneand also if it avoids loops,but it doesn't guarantee to find an optimal one,only for uniform-cost search.Time complexity is exponentialbut depth-first search is more economical with space.There are many variants of these blind search strategiesto overcome their inefficiency in using space and time.Depth-limited search.In many situations, a depth of search is limitedand this can be used to improve the search strategy.For example, if a self-driving car agent is planning an optimal routefrom city X to city Y,then the search depth may be limitedby number of cities in the considered region.It is known as the diameter of the space.There are various combinations of depth-first and breadth-first searches.For example,iterative deepening depth-first searchtries to find the best depth limit.Bidirectional search runs two searches in different directions.In this mini-lecture, we discussed uninformed search strategies,how to find the goal blindly.It is usually possible to dobut that requires time and a lot of space exploration."
}