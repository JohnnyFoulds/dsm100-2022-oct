{
  "course": "DSM100-2022-OCT",
  "topic": "Topic 2: Problem solving agents",
  "title": "Lecture 1: Problem solving agents",
  "url": "https://learn.london.ac.uk/mod/page/view.php?id=96119&forceview=1",
  "transcript": "[music]In this mini-lecture, we will consider problem-solving agents.An intelligent agent supposed to be able to solve problems,and they can do it in many different ways.Before going any further with the discussion of problem-solving agents,we will make several assumptions about their environment.We will assume that the environment is observable,so an agent knows the current state of the world.Discrete.In any state, there is a finite set of actions to choose from.Deterministic.Each action has one outcome.Under such assumptions, the solution of any problemis a sequence of actions.The process of finding such a solution is called a search.A search algorithm takes as input, a problem, and returns a sequenceof actions.In a complex environment, it can be a difficult task.There are different approaches to finding a solution.It is also important if a solution is optimal or just a suitable one.We can continue with the vacuum cleaner agent examples.The cleaner has to find the sequence of actions to getto the locations with dirt.There are several suitable sequences.In this case, based on the performance measure,clean the floor.It doesn't matter which one it chooses.A well-defined problem is determined by the following components.First, the initial state the agent starts in.Second, a description of possible actions availableto the agent.The third, transition model, a description of what each action does,successors of actions, and the state space, the set of all statesreachable from the initial state.The fourth, paths and steps costs.A cost function reflects a performance measurefor a problem-solving agent.Last, the goal.For the already familiar example of the vacuum cleaner agent,the problem is defined as following.The initial state is the agent's initial location.Possible actions available to the agents are move left, right,or suck in dirt.The transition model is defined by a description of what each action does.For example, suck leads to clean space, left leads to a change of the location,or nothing happens if the agent is already in the leftmost square.States are determined by combination of the agent and dirt location.Paths and steps costs.Each step can be assigned the cost one, and then the cost of a pathis the sum of steps.The goal state is all squares are clean.As you can see, this toy problem has discrete locations,reliable cleaning, and it never gets dirty.A search problem is an important class of problems.Route finding agents are used in a variety of applications,providing driving directions,video streams in computer networks, airline travel planning.A good example is automatic assembly sequencing.The aim is to find an order in which to assemble the parts of some object.If a wrong order is chosen, then there is no wayto add some parts later.A possible sequence of actions starting at the initial state forms a search tree.The branches of the search tree are actions,and nodes are states from the state space.The initial state for our vacuum cleaner agent is A1.From that state, two actions are possible, moving straight to A2or right to B1.There are different search strategies.We can first explore the A2 branch going deeper and deeper,or we can gradually grow the tree by adding child nodes to all nodesin the current layer.The search algorithm will explore the space until it finds all locationswith dirt, B6, C4, F3, and E5.A cost function can be simply one point for each move.The goal is to minimize the cost functionwhile cleaning all the dirt.How to measure problem-solving performance.A search algorithm has to take care about many things.Selecting a good search strategy, avoiding loops,and achieving the goal state.The performance of a search algorithm can be evaluatedby completeness.Does the algorithm guarantee to find a solution if there is one?Optimality.Does the algorithm find an optimal solution?Time complexity.How long does it take to find the solution?Space complexity.How much memory is needed to perform the search?In following mini-lectures, we will considerdifferent types of search algorithms.Let us consider another example, the 8-puzzle.It belongs to the family of sliding block puzzles,which are often usedin AI as the test problem for new search algorithms.The 8-puzzle consists of a three-by-three boardwith eight number tiles and a blank space.A tile adjacent to a blank space can slide into the space.The problem definition is, states are defined as the locationof each of the eight tiles and the blank space.Any state can be an initial state.Actions are movements of the blank space left, right, up, down.Transitions are defined by combinations of stateand action leading to a new state.Each step costs one point, and the goal state is shownin the previous slide.The problem belongs to the class of NP-complete problems.NP stands for non-deterministic polynomial time.Such problems require polynomial time to find the solution,and are considered to be easy to solve.8-puzzle has 181.440 possible states.15-puzzle has about 1.3 trillions of possible states, and so on,but it is still easy to find the solution.NP-hard problems are problems with no polynomial-time solutions"
}