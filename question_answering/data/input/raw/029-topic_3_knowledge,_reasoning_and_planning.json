{
  "course": "DSM100-2022-OCT",
  "topic": "Topic 3: Knowledge, reasoning and planning",
  "title": "Lecture 5: Logic",
  "url": "https://learn.london.ac.uk/mod/page/view.php?id=96173&forceview=1",
  "transcript": "[music]Agents intelligence relies not only on knowing the problem domainand remembering the past experience.Intelligence also relies on the ability to reason over such knowledge.What worked best in the past and why?What new knowledge can be inferred from that?To enable reasoning, knowledge has to be representedand encoded in logic.There are many logics; propositional, declarative, temporal, monotonic,and so on.In this mini-lecture, we will talk about the first-order logic, or FOL,as one of the most expressive logics.It is also one of the best-supported logics.FOL reasoners have been around for decades.They're powerful, reliable, and have a healthy community of users.FOL-based language Prolog is consideredas one of the main languages of AI.For example, components of the famous IBM Watson,the winner of Jeopardy, were written in Prolog.We will be looking at the first-order logicfrom computational perspectives, from Prolog point of viewrather than from theoretical perspectives.There is no expectation in this module for you to become proficientin Prolog programming.As I already explained, the expectation is for you to be familiarwith Prolog capabilities and understand how it can be usedto encode knowledge in logic and for programming intelligent agents.What does it mean to represent and encode knowledge in logic?Let us assume there is a knowledge modeland it includes a set of objectsand relations between them.Just like in our knowledge model about the MSc data science program,we can make statements about those objects and relations.For example, we can statethat if an academic query was handledby the module leader, then it was handled correctly.To represent and encode this statement in logic meansthat a logical inference engine can determineif the statement is true or false.This is, of course, under the assumptions that the model providesthe required information, that it includes instances of queriesby whom they will handle and if they will handle correctly.Perhaps we can determine the truthfulness of the statement by other means.Manually by inspecting all the queries, but this is not what we are after,or by employing machine learning, but for that,we need enough data and queries.Moreover, if a statement is complex,then it may be difficult to represent itin a form suitable for machine learning tools to work with.Inference engines can workwith small data, with rules, and models.In principle, they can work with big data too,but it is when it is better to switch to tools that are designed for that.The key logical operators are negation,conjunction, disjunction, implication,and equivalence.It is best to demonstrate some sets A and B that are locatedin the universe U or in the closed world.Note A, it is all the gray areaoutside of the set A,including what is covered by the set A and B,or yellow and blue area, A or B,the intersection between yellowand blue areas, the greenish area.Implication is easier to explain with the use of a truth table.If A is true and B is true,then A implies B true, and so on.You can see that any set can be inferred from F.If A is false, then it doesn't matter if B is true or false.Do not start from a false statement, any inference from that is meaningless.If you wish you can check truth tables for other logical operators.You also can check logical formulas and tools.In this topic, we're focusing on computational aspects of logic.We assume having a reason to determines the truthfulness of our statementsinstead of calculating them manually following logical formulas.Our job is to encode statements in logic so that the reasoner can process them.Other logical constructs we will need later on in this topicare quantifiers, universal quantifieror any and existential quantifiers,or some.If something is true for every instance X,then in logic we can usethe universal quantifier to state that.Now we will turn our attention to how to encode knowledge in Prolog.Prolog is well suited for solving problems that involve objectsand relations between them.Such fact as pete raises a query 001can be encoded in Prolog as,raises(pete,query_001).In terms of Prolog and first-order logic,this is a clause or a logical statement.In this case, a clause declares a factbut it also can be a complex statementwith logical operators and quantifiers.Pete is an instance of the clause student.Starts with a low-case letter.Variables like student starts with a capital letter.Raises is a relation or predicate, starts with low-case letter.This clause can be communicated to the Prolog inference engine.The engine can be posed with questions.Since our program is very simple, so are the questions we can ask,raises(pete,query_001).Having found this as an asserted fact, Prolog engine will answer true.We can also ask raises(Student,query_001)where Student is a variable.That will be not only true, but also student is Pete.Based on our [?] knowledge model, the engine figured outhow to substitute the variable and who raised the query.You can try it out in the web Prolog.Just insert your facts, questions, and hit the round button.The simple example shows that Prolog is remarkably good for retrievinginformation represented with facts.Of course, you could retrieve that information from a database,but trust me, it is so more fun to use intelligent tools like Prolog.There is even a special area of research that is called inductive databasesthat is dealing with that.The main power of Prolog comeswith reasoning all rules and databasesor conventional programming paradigms do not have such capabilities.Let us introduce a new relationor a predicate, classmates, via a group.Students are classmates if they are enrolled to the same module.In Prolog, if S1 is student one, S2 is student two, and M module.Classmate S1, S2.Implication, enrolls S1 out, enrolls S2 out.We also can add facts like Pete, Ann, and Joe are enrolledto the module ml_april2021.Now, if we hit the round button, Prolog will outputall possible ways of classmates.There is an unattended answer though like a pair, Pete, Pete.We can amend our rule by stating that S1 and S2 should be different.We can use for that dif, an inbuilt predicate that checksif S1 is different from S2.Let us analyze the considered rule.The left part of the rule, classmate(S1, S2), is called head.The right part enrolls(S1,M)enrolls(S2, M) and dif (S1, S2) body.The logical operator is implication.If the condition in the body is true, then the logical consequence of itis the statement in the head.In Prolog, conjunction or logical ANDis represented by a comma.Both logical statements enroll(S1,M)and enrolls(S2, M) must be truefor the body of the rule to be true.Disjunction logical OR prolog is represented by a semicolon.For example, successful if rich or famous.In this rule, either of statement has to be true.Questions that we pose to a Prolog agent are called goals.Clauses and questions can be complex logical statementsin first-order logic with logical operators and quantifiers.Now let's have a look at description logic versus first-order logic.The syntax of first-order logic is designed to make it easyto say things about objects.The syntax of DL is designed to make it easy to defineand describe objects.You can recall it was easy to definein RDF that MsC data science programis a postgraduate program and postgraduate programis an educational unit.We defined a whole tree-like structure of definitions of all objectsin our model.First-order logic is not good with defining and reasoningover such structures.The main inference in description logic are subsumption,checking if one class is subclass of another classby using the definitions and classification,checking to what class an object belongs to.Such reasoning capabilities are not advanced, but they are importantfor ensuring the logical consistency of the knowledge model.As is it is often the case, these different approachescan be integrated.It is possible to define objects and relations in RDFand translate them to Prolog, and then define rulesfor those objects in prolog.In this mini-lecture, we'll look at the key logical constructs,operators and quantifiers, and how first-order logic statementscan be encoded in Prolog.Prolog is a powerful and well-supported languageand probably the best for reasoning over knowledge."
}